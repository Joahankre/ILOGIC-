Public Sub Main()
    ' Obtenha o documento de desenho ativo
    Dim doc As DrawingDocument = ThisDoc.Document

    ' Verifique se o documento é um desenho válido
    If doc Is Nothing OrElse doc.Sheets.Count = 0 Then
        MsgBox("Nenhuma folha encontrada no documento de desenho.")
        Exit Sub
    End If

    ' Obtenha a primeira folha do desenho
    Dim firstSheet As Sheet = doc.Sheets.Item(1)

    ' Verifique se a primeira folha tem vistas
    If firstSheet.DrawingViews.Count = 0 Then
        MsgBox("Nenhuma vista encontrada na primeira folha.")
        Exit Sub
    End If

    ' Obtenha a primeira vista da folha (supondo que a montagem esteja na primeira vista)
    Dim firstView As DrawingView = firstSheet.DrawingViews.Item(1)

    ' Verifique se a vista é de uma montagem
    If Not TypeOf firstView.ReferencedDocumentDescriptor.ReferencedDocument Is AssemblyDocument Then
        MsgBox("A primeira vista não é uma montagem.")
        Exit Sub
    End If

    ' Obtenha o documento de montagem associado à primeira vista
    Dim assemblyDoc As AssemblyDocument = CType(firstView.ReferencedDocumentDescriptor.ReferencedDocument, AssemblyDocument)

    ' Tornar a janela de log do iLogic visível
    For Each oDockableWindow As Inventor.DockableWindow In ThisApplication.UserInterfaceManager.DockableWindows
        If oDockableWindow.InternalName = "ilogic.logwindow" Then
            oDockableWindow.Visible = True
        End If
    Next

    ' Perguntar se deve considerar apenas o primeiro nível da BOM
    Dim firstLevelOnly As Boolean
    If MsgBox("Somente primeiro nível?", vbYesNo) = vbYes Then
        firstLevelOnly = True
    Else
        firstLevelOnly = False
    End If

    ' Defina uma referência à BOM da montagem
    Dim bom As BOM = assemblyDoc.ComponentDefinition.BOM

    ' Defina se será somente o primeiro nível ou todos os níveis
    If firstLevelOnly Then
        bom.StructuredViewFirstLevelOnly = True
    Else
        bom.StructuredViewFirstLevelOnly = False
    End If

    ' Certifique-se de que a visualização estruturada está habilitada
    bom.StructuredViewEnabled = True

    ' Defina uma referência à visualização "Structured" da BOM
    Dim bomView As BOMView = bom.BOMViews.Item("Structured")

    ' Exibir cabeçalho no log
    Logger.Info("Item / Quantidade / Número da Peça / Descrição")
    Logger.Info("----------------------------------------------------------------------------------")

    ' Inicialize o tab para o ItemNumber
    Dim itemTab As Long
    itemTab = -3
    QueryBOMRowProperties(bomView.BOMRows, itemTab)
End Sub

Private Sub QueryBOMRowProperties(bomRows As BOMRowsEnumerator, itemTab As Long)
    itemTab = itemTab + 3
    ' Itere pelo conteúdo das linhas da BOM
    Dim i As Long
    For i = 1 To bomRows.Count
        ' Obtenha a linha atual
        Dim row As BOMRow = bomRows.Item(i)

        ' Defina uma referência à ComponentDefinition primária da linha
        Dim compDef As ComponentDefinition = row.ComponentDefinitions.Item(1)

        Dim partNumProperty As [Property]
        Dim descripProperty As [Property]

        If TypeOf compDef Is VirtualComponentDefinition Then
            ' Obtenha a propriedade do arquivo que contém o "Número da Peça"
            partNumProperty = compDef.PropertySets.Item("Design Tracking Properties").Item("Part Number")
            descripProperty = compDef.PropertySets.Item("Design Tracking Properties").Item("Description")

            Logger.Info(TAB(itemTab) & row.ItemNumber & "- " & row.ItemQuantity & "QTDE " & partNumProperty.Value & "- " & descripProperty.Value)
        Else
            ' Obtenha a propriedade do arquivo que contém o "Número da Peça"
            partNumProperty = compDef.Document.PropertySets.Item("Design Tracking Properties").Item("Part Number")
            descripProperty = compDef.Document.PropertySets.Item("Design Tracking Properties").Item("Description")

            Logger.Info(TAB(itemTab) & row.ItemNumber & "- QTDE" & row.ItemQuantity & "- " & partNumProperty.Value & "- " & descripProperty.Value)

            ' Itere recursivamente nas linhas-filhas, se houver
            If Not row.ChildRows Is Nothing Then
                QueryBOMRowProperties(row.ChildRows, itemTab)
            End If
        End If
    Next
    itemTab = itemTab - 3
End Sub

Private Function TAB(length As Integer) As String
    Return New String(" ", length)
End Function
